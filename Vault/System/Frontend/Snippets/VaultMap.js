class VaultMap {
  constructor(config = {}) {
    this.vaultName = config.vaultName || "Awesome-Test-Vault";
    this.hotspots = this.defaultHotspots();
  }

  defaultHotspots() {
    return [
      {
        name: "Learnings",
        url: `obsidian://open?vault=${this.vaultName}&file=Learnings`,
        coords: [143,203,232,194,272,214,304,194,322,163,349,138,363,128,388,129,401,132,405,119,405,97,416,80,432,65,452,47,473,26,490,41,504,60,514,72,527,88,531,101,521,111,518,127,521,150,521,163,535,173,554,187,573,197,584,208,599,219,612,235,608,250,607,267,607,295,607,325,611,353,611,378,628,391,646,395,661,413,665,425,668,444,664,471,657,495,638,505,612,508,576,511,540,509,499,508,473,505,437,504,385,503,339,499,308,499,300,472,299,428,300,402,311,392,289,377,258,366,237,366,195,373,162,369,126,365,103,361,112,328,116,302,113,273,122,250,130,224]
      },
      {
        name: "System",
        url: `obsidian://open?vault=${this.vaultName}&file=System`,
        coords: [695,1442,670,1438,626,1437,592,1433,566,1429,572,1398,568,1370,566,1339,578,1319,593,1305,588,1278,577,1264,572,1233,572,1205,572,1176,572,1151,572,1120,570,1090,586,1073,597,1063,622,1050,632,1045,633,1027,633,1009,637,982,654,966,676,950,690,943,672,911,657,896,649,871,651,853,670,848,680,848,700,817,711,814,733,818,767,845,785,875,796,880,831,880,859,885,872,892,856,911,841,926,836,947,856,963,873,977,882,993,877,1018,872,1044,886,1050,905,1057,922,1076,929,1091,934,1113,929,1138,930,1164,934,1183,932,1209,934,1231,930,1258,923,1276,898,1287,898,1303,905,1323,909,1344,913,1370,913,1390,913,1406,908,1423,901,1438,858,1435,832,1437,789,1437,751,1438,731,1440]
      },
      {
        name: "Notes",
        url: `obsidian://open?vault=${this.vaultName}&file=Notes`,
        coords: [901,355,896,363,893,379,881,397,875,406,850,415,830,416,804,421,798,402,783,381,759,373,751,354,740,339,742,308,742,283,747,254,754,232,749,216,749,185,751,154,756,129,772,114,787,98,805,91,823,86,844,82,865,76,897,63,914,46,937,31,954,31,978,42,1000,59,1019,68,1042,82,1072,85,1098,85,1129,93,1148,105,1164,116,1180,127,1189,141,1189,165,1191,192,1188,216,1189,241,1187,269,1189,299,1187,318,1173,339,1146,346,1108,340,1084,345,1071,361,1031,355,1001,355,970,350,937,349,912,349]
      },
      {
        name: "Files and Media",
        url: `obsidian://open?vault=${this.vaultName}&file=Files and Media`,
        coords: [944,830,921,832,890,831,864,829,845,827,831,808,831,782,835,762,836,745,841,720,866,710,861,691,841,686,819,675,804,664,797,643,795,624,799,598,799,576,809,552,828,546,850,552,861,536,859,495,873,477,893,469,920,463,940,457,962,448,989,442,1025,432,1049,421,1064,418,1078,416,1094,424,1113,434,1129,446,1144,457,1166,468,1180,473,1196,488,1187,504,1185,526,1184,558,1198,566,1208,571,1221,597,1221,624,1224,644,1226,670,1228,687,1226,705,1230,727,1234,736,1242,762,1243,781,1237,812,1232,827,1207,830,1181,829,1162,829,1140,831,1127,829,1096,829,1087,830,1062,828,1039,828,1013,828,983,828,963,828]
      },
      {
        name: "Archive",
        url: `obsidian://open?vault=${this.vaultName}&file=Archive`,
        coords: [1091,1175,1082,1189,1057,1185,1036,1176,1036,1166,1021,1154,1014,1132,1021,1103,1026,1072,1040,1063,1021,1027,1019,1005,1030,984,1035,958,1053,939,1086,934,1104,946,1104,970,1122,949,1164,960,1179,975,1200,991,1211,1000,1213,1041,1215,1059,1223,1067,1231,1078,1233,1101,1232,1132,1229,1166,1223,1192,1209,1206,1171,1210,1137,1202,1121,1180,1106,1178]
      }
    ];
  }

  renderMap(wrapperId = "vault-map-wrapper", imageId = "vault-map") {
    const wrapper = document.getElementById(wrapperId);
    const img = document.getElementById(imageId);
    const svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
    svg.setAttribute("width", img.clientWidth);
    svg.setAttribute("height", img.clientHeight);
    svg.setAttribute("style", "position:absolute;top:0;left:0;pointer-events:none;z-index:5;");
    svg.setAttribute("id", "vault-map-svg");

    this.hotspots.forEach(h => {
      const poly = document.createElementNS("http://www.w3.org/2000/svg", "polygon");
      poly.setAttribute("points", h.coords.join(" "));
      poly.setAttribute("fill", "rgba(255,255,255,0.01)");
      poly.setAttribute("stroke", "rgba(255,255,255,0.1)");
      poly.classList.add("hotspot");
      poly.style.cursor = "pointer";
      poly.style.pointerEvents = "auto";
      poly.addEventListener("click", () => window.open(h.url));
      svg.appendChild(poly);
    });

    wrapper.appendChild(svg);
  }
}
